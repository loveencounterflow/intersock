{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nWGUY                      = require 'webguy'\n{ log\n  debug }                 = console\n\n#===========================================================================================================\ndefaults =\n  host:   'localhost'\n  port:   5500 + 1\n\n#===========================================================================================================\n@Intersock = class Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    ### TAINT hardcoding address for the time being ###\n    # @providers  = providers\n    # @state      =\n    #   last_id:      0\n    # debug '^24343^', providers\n    # debug '^24343^', ( WGUY.props.public_keys p ) for p in providers\n    cfg     = { defaults..., cfg..., }\n    cfg.url = \"ws://#{cfg.host}:#{cfg.port}/ws\"\n    @cfg    = Object.freeze cfg\n    if globalThis.WebSocket?  then  @_create_client()\n    else                            @_create_server()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _create_client: ->\n    @_ws_client = @_ws = new WebSocket @cfg.url\n    #.......................................................................................................\n    @_ws_client.addEventListener 'open', ( event ) =>\n      log \"Opened WebSocket connection:\", event.data\n      @_ws_client.send JSON.stringify { $key: 'info', $value: \"helo from client\", }\n      return null\n    #.......................................................................................................\n    @_ws_client.addEventListener 'message', (event) =>\n      log \"Received message from server \", event.data\n      return null\n    #.......................................................................................................\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _create_server: ->\n    ### TAINT here we can use guy ###\n    WS          = require 'ws'\n    @_ws_server = @_ws = new WS.WebSocketServer { port: @cfg.port, }\n    @_ws_server.on 'connection', connection = ( ws ) =>\n      #.....................................................................................................\n      ws.on 'error',    ( P... ) =>\n        console.error P\n        return null\n      #.....................................................................................................\n      ws.on 'message',  ( d ) =>\n        d = JSON.parse d\n        log 'received: %s', d\n        ws.send JSON.stringify { received: d, }\n        return null\n      #.....................................................................................................\n      debug '^233453^', \"Intersock WebSocketServer connected on #{@cfg.url}\"\n      ws.send \"helo from #{@cfg.url}\"\n      return null\n    #.......................................................................................................\n    debug '^233453^', \"Intersock WebSocketServer listening on #{@cfg.url}\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  _next_id: -> @state.last_id++\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( $value ) -> new Promise ( resolve, reject ) =>\n    id  = @_next_id()\n    d   = { id, $key: 'send', $value, }\n    handler = ( event ) =>\n      debug '^32439423874^', event.data\n      d = JSON.parse event.data\n      @_ws.removeEventListener 'message', handler\n      resolve d\n    ### TAINT only valid for client-side code ###\n    @_ws.addEventListener 'message', handler\n    @_ws.send JSON.stringify d\n\n\n"
  ]
}