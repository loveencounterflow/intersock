{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nWGUY                      = require 'webguy'\n{ rpr }                   = WGUY.trm\n{ log\n  debug }                 = console\nprimitive_types           = [ 'number', 'boolean', 'string', ]\n\n\n#===========================================================================================================\ndefaults =\n  host:         'localhost'\n  port:         5500 + 1\n  _in_browser:  WGUY.environment.browser\n\n#===========================================================================================================\nget_message_class = ( hub ) ->\n\n  #---------------------------------------------------------------------------------------------------------\n  $idx  = -1\n  $from = if ( hub instanceof Intersock_server ) then 's' else 'c'\n\n  #---------------------------------------------------------------------------------------------------------\n  return class Message\n\n    #-------------------------------------------------------------------------------------------------------\n    constructor: ( $key, $value, extra ) ->\n      $id = WGUY.time.stamp()\n      $idx++\n      return if @_is_primitive $value then  { $id, $idx, $from, $value,     extra..., }\n      else                                  { $id, $idx, $from, $value...,  extra..., }\n\n    #-------------------------------------------------------------------------------------------------------\n    _is_primitive: ( x ) ->\n      return true if not x?\n      return true if ( typeof x ) in primitive_types\n      return true if Array.isArray x\n      return false\n\n\n#===========================================================================================================\n@Intersock = class Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    # @providers  = providers\n    # debug '^24343^', providers\n    # debug '^24343^', ( WGUY.props.public_keys p ) for p in providers\n    cfg             = { defaults..., cfg..., }\n    cfg.url         = \"ws://#{cfg.host}:#{cfg.port}/ws\"\n    cfg._in_browser = globalThis.WebSocket?\n    @cfg            = Object.freeze cfg\n    @Message        = get_message_class @\n    debug '^Intersock.constructor@1^', @cfg\n    @_ws            = null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _next_id: -> @state.last_id++\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( $value ) -> new Promise ( resolve, reject ) =>\n    d       = new @Message 'send', $value\n    handler = ( data_ui8a ) =>\n      debug '^intersock.send/handler@1^', @constructor.name, ( typeof data_ui8a ), ( Object::toString.call data_ui8a )\n      d = @_parse_message data_ui8a\n      @_ws.removeEventListener 'message', handler\n      resolve d\n    ### TAINT only valid for client-side code ###\n    @on 'message', handler\n    @_ws.send JSON.stringify d\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  on: ( P... ) -> ( if @cfg._in_browser then @_ws.addEventListener else @_ws.on ).apply @_ws, P\n\n  #---------------------------------------------------------------------------------------------------------\n  _parse_message: ( data ) ->\n    try\n      data  = data.data       if @cfg._in_browser\n      data  = data.toString() if ( typeof data ) isnt 'string'\n      R     = JSON.parse data\n    catch error\n      debug '^intersock@1^', \"ERROR\", error.message\n      R   = new @Message 'error', data, { $error: error.message, }\n    return R\n\n\n#===========================================================================================================\n@Intersock_server = class Intersock_server extends Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    @serve()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  serve: ->\n    ### TAINT here we can use guy ###\n    resolved    = false\n    WS          = require 'ws'\n    @_ws_server = new WS.WebSocketServer { port: @cfg.port, }\n    @_ws_server.on 'connection', connection = ( ws ) =>\n      @_ws = ws\n      #.....................................................................................................\n      @_ws.on 'error',    ( P... ) =>\n        console.error P\n        return null\n      #.....................................................................................................\n      @_ws.on 'message',  ( d ) =>\n        d = JSON.parse d\n        log \"^Intersock_server/on_message@1^ server received: #{rpr d}\"\n        unless d.$key is 'received'\n          ws.send JSON.stringify new @Message 'received', d\n        return null\n      #.....................................................................................................\n      debug '^233453^', \"Intersock WebSocketServer connected on #{@cfg.url}\"\n      @send \"helo from #{@cfg.url}\"\n      return null\n    #.......................................................................................................\n    debug '^233453^', \"Intersock WebSocketServer listening on #{@cfg.url}\"\n    return null\n\n\n#===========================================================================================================\n@Intersock_client = class Intersock_client extends Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( $value ) ->\n    await @connect() if @connect? and not @_ws?\n    await super $value\n\n  #---------------------------------------------------------------------------------------------------------\n  connect: -> new Promise ( resolve, reject ) =>\n    if @cfg._in_browser then  @_ws_client = @_ws = new globalThis.WebSocket @cfg.url\n    else                      @_ws_client = @_ws = new ( require 'ws' ).WebSocket @cfg.url\n    debug '^start@3^', @constructor.name, typeof @_ws\n    #.......................................................................................................\n    @on 'open', =>\n      log \"Connected to server\", @cfg.url\n      @_ws_client.send JSON.stringify { $key: 'info', $value: \"helo from client\", }\n      @_ws_client.send JSON.stringify new @Message 'info', \"helo from client\"\n      resolve null\n    #.......................................................................................................\n    @on 'message', ( data_ui8a ) =>\n      # debug '^Intersock_client.on/message@1^', @constructor.name, ( typeof data_ui8a ), ( Object::toString.call data_ui8a )\n      d = @_parse_message data_ui8a\n      log \"^Intersock_client/on_message@1^ client received: #{rpr d}\"\n      return null\n    #.......................................................................................................\n    return null\n\n"
  ]
}