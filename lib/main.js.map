{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nWGUY                      = require 'webguy'\n{ rpr }                   = WGUY.trm\n{ log\n  debug }                 = console\nprimitive_types           = [ 'number', 'boolean', 'string', ]\n{ to_width }              = require 'to-width'\n\n\n#===========================================================================================================\ntabulate = ( ref, action, message ) ->\n  ref     = to_width ref,     20\n  action  = to_width action,  10\n  message = '' if message is undefined\n  log \"#{ref}| #{action}| #{rpr message}\"\n  return null\n\n\n#===========================================================================================================\ndefaults =\n  host:         'localhost'\n  port:         5500 + 1\n  throw_errors: false\n  _in_browser:  WGUY.environment.browser\n\n\n#===========================================================================================================\nget_message_class = ( hub ) ->\n\n  #---------------------------------------------------------------------------------------------------------\n  $idx  = -1\n  $from = hub.cfg._$from\n\n  #---------------------------------------------------------------------------------------------------------\n  return class Message\n\n    #-------------------------------------------------------------------------------------------------------\n    constructor: ( $key, $value, extra ) ->\n      $id = WGUY.time.stamp()\n      $idx++\n      return if @_is_primitive $value then  { $id, $idx, $from, $key, $value,     extra..., }\n      else                                  { $id, $idx, $from, $key, $value...,  extra..., }\n\n    #-------------------------------------------------------------------------------------------------------\n    _is_primitive: ( x ) ->\n      return true if not x?\n      return true if ( typeof x ) in primitive_types\n      return true if Array.isArray x\n      return false\n\n\n#===========================================================================================================\n@Intersock = class Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    cfg             = { defaults..., cfg..., }\n    cfg.url         = \"ws://#{cfg.host}:#{cfg.port}/ws\"\n    cfg._in_browser = globalThis.WebSocket?\n    cfg._$from      = if ( @ instanceof Intersock_server ) then 's' else 'c'\n    @cfg            = Object.freeze cfg\n    @Message        = get_message_class @\n    @_ws            = null\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _next_id: -> @state.last_id++\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( $key, $value, extra ) -> new Promise ( resolve, reject ) =>\n    d       = new @Message $key, $value, extra\n    tabulate \"^#{@cfg._$from}.send@1^\", 'send', d\n    handler = ( data_ui8a ) =>\n      d = @_parse_message data_ui8a\n      @_ws.removeEventListener 'message', handler\n      tabulate \"^#{@cfg._$from}.send/handler@^\", 'reply to send', d\n      resolve d\n    ### TAINT only valid for client-side code ###\n    @on 'message', handler\n    @_ws.send JSON.stringify d\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  on: ( P... ) -> ( if @cfg._in_browser then @_ws.addEventListener else @_ws.on ).apply @_ws, P\n\n  #---------------------------------------------------------------------------------------------------------\n  _parse_message: ( data ) ->\n    try\n      data  = data.data       if @cfg._in_browser\n      data  = data.toString() if ( typeof data ) isnt 'string'\n      R     = JSON.parse data\n    catch error\n      throw error if @cfg.throw_errors\n      debug '^#{@cfg._$from}._parse_message@1^', \"ERROR\", error.message\n      R   = new @Message 'error', data, { $error: error.message, }\n    return R\n\n\n#===========================================================================================================\n@Intersock_server = class Intersock_server extends Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    @serve()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  serve: ->\n    ### TAINT here we can use guy ###\n    resolved    = false\n    WS          = require 'ws'\n    @_ws_server = new WS.WebSocketServer { port: @cfg.port, }\n    @_ws_server.on 'connection', connection = ( ws ) =>\n      @_ws = ws\n      #.....................................................................................................\n      @_ws.on 'error',    ( P... ) =>\n        console.error P\n        return null\n      #.....................................................................................................\n      @_ws.on 'message',  ( data_ui8a ) =>\n        d = @_parse_message data_ui8a\n        tabulate \"^#{@cfg._$from}/on_message@1^\", 'received', d\n        unless d.$key is 'received'\n          @send 'ack', d # JSON.stringify new @Message 'received', d\n        return null\n      #.....................................................................................................\n      tabulate \"^#{@cfg._$from}/on_connection@1^\", 'connect', @cfg.url\n      # @send 'info', \"helo from #{@cfg.url}\"\n      return null\n    #.......................................................................................................\n    tabulate \"^#{@cfg._$from}/serve@1^\", 'listen', @cfg.url\n    return null\n\n\n#===========================================================================================================\n@Intersock_client = class Intersock_client extends Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( $key, $value, extra ) ->\n    await @connect() if @connect? and not @_ws?\n    await super $key, $value, extra\n\n  #---------------------------------------------------------------------------------------------------------\n  connect: -> new Promise ( resolve, reject ) =>\n    if @cfg._in_browser then  @_ws_client = @_ws = new globalThis.WebSocket @cfg.url\n    else                      @_ws_client = @_ws = new ( require 'ws' ).WebSocket @cfg.url\n    #.......................................................................................................\n    @on 'open', =>\n      tabulate \"^#{@cfg._$from}/on_open@1^\", 'connect', @cfg.url\n      # @send 'info', \"helo from client\"\n      resolve null\n    #.......................................................................................................\n    @on 'message', ( data_ui8a ) =>\n      d = @_parse_message data_ui8a\n      tabulate \"^#{@cfg._$from}/on_message@1^\", 'receive', d\n      return null\n    #.......................................................................................................\n    return null\n\n"
  ]
}