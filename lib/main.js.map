{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nWGUY                      = require 'webguy'\n{ log\n  debug }                 = console\n\n#===========================================================================================================\ndefaults =\n  host:         'localhost'\n  port:         5500 + 1\n  _in_browser:  WGUY.environment.browser\n\n#===========================================================================================================\n@Intersock = class Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    # @providers  = providers\n    # debug '^24343^', providers\n    # debug '^24343^', ( WGUY.props.public_keys p ) for p in providers\n    @state          = { last_id: 0, }\n    cfg             = { defaults..., cfg..., }\n    cfg.url         = \"ws://#{cfg.host}:#{cfg.port}/ws\"\n    cfg._in_browser = globalThis.WebSocket?\n    @cfg            = Object.freeze cfg\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _next_id: -> @state.last_id++\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( $value ) -> new Promise ( resolve, reject ) =>\n    id  = @_next_id()\n    d   = { id, $key: 'send', $value, }\n    handler = ( data_ui8a ) =>\n      debug '^intersock.send/handler@1^', @constructor.name, ( typeof data_ui8a ), ( Object::toString.call data_ui8a )\n      d = @_parse_message data_ui8a\n      @_ws.removeEventListener 'message', handler\n      resolve d\n    ### TAINT only valid for client-side code ###\n    @on 'message', handler\n    @_ws.send JSON.stringify d\n\n  #---------------------------------------------------------------------------------------------------------\n  on: ( P... ) -> ( if @cfg._in_browser then @_ws.addEventListener else @_ws.on ).apply @_ws, P\n\n  #---------------------------------------------------------------------------------------------------------\n  _parse_message: ( data ) ->\n    try\n      data  = data.data       if @cfg._in_browser\n      data  = data.toString() if ( typeof data ) isnt 'string'\n      R     = JSON.parse data\n    catch error\n      debug '^intersock@1^', \"ERROR\", error.message\n      R = { $value: data, error: error.message, }\n    return R\n\n\n#===========================================================================================================\n@Intersock_client = class Intersock_client extends Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    # @start()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  start: ->\n    { WebSocket } = require 'ws' unless @cfg._in_browser\n    @_ws_client = @_ws = new WebSocket @cfg.url\n    #.......................................................................................................\n    @on 'open', =>\n      log \"Connected to server\", @cfg.url\n      @_ws_client.send JSON.stringify { $key: 'info', $value: \"helo from client\", }\n      return null\n    #.......................................................................................................\n    @on 'message', ( data_ui8a ) =>\n      debug '^Intersock_client.on/message@1^', @constructor.name, ( typeof data_ui8a ), ( Object::toString.call data_ui8a )\n      message = @_parse_message data_ui8a\n      log \"Received message from server\", message\n      return null\n    #.......................................................................................................\n    return null\n\n#===========================================================================================================\n@Intersock_server = class Intersock_server extends Intersock\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super cfg\n    # @start()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  start: ->\n    ### TAINT here we can use guy ###\n    resolved    = false\n    WS          = require 'ws'\n    @_ws_server = new WS.WebSocketServer { port: @cfg.port, }\n    @_ws_server.on 'connection', connection = ( ws ) =>\n      @_ws = ws\n      #.....................................................................................................\n      @_ws.on 'error',    ( P... ) =>\n        console.error P\n        return null\n      #.....................................................................................................\n      @_ws.on 'message',  ( d ) =>\n        d = JSON.parse d\n        log 'received: %s', d\n        ws.send JSON.stringify { received: d, }\n        return null\n      #.....................................................................................................\n      debug '^233453^', \"Intersock WebSocketServer connected on #{@cfg.url}\"\n      @send \"helo from #{@cfg.url}\"\n      return null\n    #.......................................................................................................\n    debug '^233453^', \"Intersock WebSocketServer listening on #{@cfg.url}\"\n    return null\n\n\n"
  ]
}